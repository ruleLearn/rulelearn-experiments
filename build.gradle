buildscript {
	repositories {
		jcenter()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2' //adds junitPlatformTest task
	}
}

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'eclipse'
apply plugin: 'idea'

repositories {
	jcenter()
	maven { url 'https://mvnrepository.com/artifact/javax.annotation/javax.annotation-api' }
	maven { url 'https://jitpack.io' } //Maven repository serving ruleLearn library
}

dependencies {
	//adding ruleLearn library
	implementation('com.github.ruleLearn:rulelearn:0.14.3')

	testImplementation("org.junit.jupiter:junit-jupiter-api:5.0.2")
	testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.0.2")
	testRuntimeOnly("org.junit.platform:junit-platform-launcher:1.0.2")
	
	testImplementation("org.mockito:mockito-core:2.23.4")
	
	// To avoid compiler warnings about @API annotations in JUnit code
	testCompileOnly('org.apiguardian:apiguardian-api:1.0.0') //licenced under Apache License 2.0; https://github.com/apiguardian-team/apiguardian
	
	// To use Log4J's LogManager during JUnit tests
	testRuntimeOnly("org.apache.logging.log4j:log4j-core:2.10.0") //licenced under Apache License 2.0; https://logging.apache.org/log4j/2.x/
	testRuntimeOnly("org.apache.logging.log4j:log4j-jul:2.10.0") //licenced under Apache License 2.0; https://logging.apache.org/log4j/2.x/
}

junitPlatform {
	// platformVersion '1.0.2'
	filters {
		engines {
			// include 'junit-jupiter', 'junit-vintage'
			// exclude 'custom-engine'
		}
		tags {
			// include 'fast'
			// exclude 'integration'
		}
		// includeClassNamePattern '.*Test'
	}
	enableStandardTestTask true
	// reportsDir file('build/test-results/junit-platform') // this is the default
	logManager 'org.apache.logging.log4j.jul.LogManager'
}
